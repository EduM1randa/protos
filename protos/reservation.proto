syntax = "proto3";

package reservation;

option go_package = './proto';

service ReservationService {
    // RPC para crear una reserva
    rpc CreateReservation (CreateReservationRequest) returns (Response);
    // RPC para obtener una reserva por ID
    rpc GetReservationByID (GetReservationByIDRequest) returns (Reservation);
    // RPC para obtener reservas por usuario
    rpc GetReservationsByUserID (GetReservationsByUserIDRequest) returns (Reservations);
    // RPC para obtener reservas por fecha
    rpc GetReservationsByDate (GetReservationsByDateRequest) returns (Reservations);
    // RPC para actualizar una reserva
    rpc UpdateReservation (UpdateReservationRequest) returns (Response);
    // RPC para eliminar una reserva
    rpc DeleteReservation (DeleteReservationRequest) returns (Response);
}

service TableService {
    // RPC para crear una mesa
    rpc CreateTable (CreateTableRequest) returns (Response);
    // RPC para obtener todas las mesas
    rpc GetTables (Empty) returns (Tables);
    // RPC para actualizar el estado o capacidad de una mesa
    rpc UpdateTable (UpdateTableRequest) returns (Response);
    // RPC para obtener mesas disponibles para un día específico
    rpc GetAvailableTables (GetAvailableTablesRequest) returns (Tables);
}

message Message {
    string body = 1;
}

// Mensaje para crear una reserva
message CreateReservationRequest {
    string id = 1;
    string user_id = 2;
    string table_id = 3;
    string reservation_date = 4;
    int32 guest_count = 5;
    string status = 6;
}

// Mensaje para obtener una reserva por ID
message GetReservationByIDRequest {
    string id = 1;
}

// Mensaje para obtener reservas por usuario
message GetReservationsByUserIDRequest {
    string user_id = 1;
}

// Mensaje para obtener reservas por fecha
message GetReservationsByDateRequest {
    string reservation_date = 1;
}

// Mensaje para actualizar una reserva
message UpdateReservationRequest {
    string id = 1;
    string table_id = 2;
    string reservation_date = 3;
    int32 guest_count = 4;
    string status = 5;
}

// Mensaje para eliminar una reserva
message DeleteReservationRequest {
    string id = 1;
}

// Mensaje de respuesta genérica
message Response {
    string message = 1;
    bool success = 2;
}

// Mensaje de reserva
message Reservation {
    string id = 1;
    string user_id = 2;
    string table_id = 3;
    string reservation_date = 4;
    int32 guest_count = 5;
    string status = 6;
    string create_at = 7;
    string update_at = 8;
}

// Mensaje para una lista de reservas
message Reservations {
    repeated Reservation reservations = 1;
}
// Mensaje vacío
message Empty {}

// Mensaje para crear una mesa
message CreateTableRequest {
    string id = 1;
    int32 number = 2;
    int32 capacity = 3;
    bool is_reserved = 4;
}

// Mensaje para actualizar una mesa
message UpdateTableRequest {
    string id = 1;
    int32 capacity = 2;
    bool is_reserved = 3;
}

// Mensaje para obtener mesas disponibles para un día específico
message GetAvailableTablesRequest {
    string reservation_date = 1;
}

// Mensaje de una mesa
message Table {
    string id = 1;
    int32 number = 2;
    int32 capacity = 3;
    bool is_reserved = 4;
}

// Mensaje de múltiples mesas
message Tables {
    repeated Table tables = 1;
}